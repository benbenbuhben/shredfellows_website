{"version":3,"sources":["../static/js/4.22063c72.chunk.js","../node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","../node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/html/workerManager.js","../node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js"],"names":["webpackJsonp","1025","module","__webpack_exports__","__webpack_require__","setupMode","defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerDocumentHighlightProvider","registerLinkProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","Object","defineProperty","value","1062","d","Position","Range","Location","DiagnosticSeverity","TextEdit","MarkupKind","CompletionItemKind","InsertTextFormat","MarkedString","DocumentHighlightKind","SymbolKind","TextDocument","create","line","character","is","candidate","Is","defined","number","one","two","three","four","start","end","Error","uri","range","string","undefined","Warning","Information","Hint","Diagnostic","message","severity","code","source","result","Command","title","command","args","replace","newText","insert","position","del","TextDocumentEdit","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","TextDocumentIdentifier","TextEditChangeImpl","this","prototype","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","documentChanges","forEach","textDocumentEdit","textEditChange","changes","keys","key","get","enumerable","configurable","getTextEditChange","version","TextDocumentItem","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","CompletionItem","label","CompletionList","items","isIncomplete","fromPlainText","plainText","ParameterInformation","documentation","SignatureInformation","parameters","Read","Write","DocumentHighlight","kind","Namespace","Package","String","Number","Boolean","Key","Null","SymbolInformation","name","containerName","location","CodeActionContext","diagnostics","typedArray","CodeLens","data","FormattingOptions","tabSize","insertSpaces","boolean","DocumentLink","target","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","lastModifiedOffset","i","e","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","1136","toShallowCancelPromise","completeCallback","errorCallback","r","Promise","c","then","WorkerManager","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","getProxy","resources","_","withSyncedResources","1137","toSeverity","lsSeverity","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","MarkerSeverity","Info","toDiagnostics","resource","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","mItemKind","toTextEdit","textEdit","toHighlighKind","mKind","fromFormattingOptions","wireCancellationToken","token","promise","cancel","onCancellationRequested","DiagnosticsAdapter","CompletionAdapter","DocumentHighlightAdapter","DocumentLinkAdapter","DocumentFormattingEditProvider","DocumentRangeFormattingEditProvider","Uri","_disposables","_listener","onModelAdd","model","modeId","getModeId","handle","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","getModels","doValidation","markers","map","getModel","err","console","error","provideCompletionItems","getWordUntilPosition","doComplete","info","entry","item","insertText","sortText","filterText","detail","insertTextFormat","provideDocumentHighlights","findDocumentHighlights","provideLinks","findDocumentLinks","url","provideDocumentFormattingEdits","format","provideDocumentRangeFormattingEdits"],"mappings":"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","file":"static/js/4.22063c72.chunk.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 1025:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setupMode\"] = setupMode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__workerManager_js__ = __webpack_require__(1136);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__ = __webpack_require__(1137);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nfunction setupMode(defaults) {\n    var client = new __WEBPACK_IMPORTED_MODULE_0__workerManager_js__[\"a\" /* WorkerManager */](defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"a\" /* CompletionAdapter */](worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"d\" /* DocumentHighlightAdapter */](worker));\n    monaco.languages.registerLinkProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"e\" /* DocumentLinkAdapter */](worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"c\" /* DocumentFormattingEditProvider */](worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"f\" /* DocumentRangeFormattingEditProvider */](worker));\n        new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"b\" /* DiagnosticsAdapter */](languageId, worker, defaults);\n    }\n}\n\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return Position; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Location; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticSeverity; });\n/* unused harmony export Diagnostic */\n/* unused harmony export Command */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return TextEdit; });\n/* unused harmony export TextDocumentEdit */\n/* unused harmony export WorkspaceChange */\n/* unused harmony export TextDocumentIdentifier */\n/* unused harmony export VersionedTextDocumentIdentifier */\n/* unused harmony export TextDocumentItem */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return InsertTextFormat; });\n/* unused harmony export CompletionItem */\n/* unused harmony export CompletionList */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return MarkedString; });\n/* unused harmony export ParameterInformation */\n/* unused harmony export SignatureInformation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentHighlightKind; });\n/* unused harmony export DocumentHighlight */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return SymbolKind; });\n/* unused harmony export SymbolInformation */\n/* unused harmony export CodeActionContext */\n/* unused harmony export CodeLens */\n/* unused harmony export FormattingOptions */\n/* unused harmony export DocumentLink */\n/* unused harmony export EOL */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return TextDocument; });\n/* unused harmony export TextDocumentSaveReason */\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nvar Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nvar Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nvar Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nvar DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nvar Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nvar Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nvar TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nvar TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\n\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nvar TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nvar VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nvar TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nvar MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nvar InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nvar CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nvar CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nvar ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nvar SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nvar DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nvar CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nvar CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nvar FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\n\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar EOL = ['\\n', '\\r\\n', '\\r'];\nvar TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WorkerManager; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\n\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DocumentHighlightAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return DocumentLinkAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return DocumentRangeFormattingEditProvider; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__ = __webpack_require__(1062);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\n\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Error: return monaco.MarkerSeverity.Error;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Warning: return monaco.MarkerSeverity.Warning;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Information: return monaco.MarkerSeverity.Info;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text: return mItemKind.Text;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method: return mItemKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function: return mItemKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor: return mItemKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field: return mItemKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable: return mItemKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class: return mItemKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface: return mItemKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module: return mItemKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property: return mItemKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit: return mItemKind.Unit;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value: return mItemKind.Value;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum: return mItemKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword: return mItemKind.Keyword;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet: return mItemKind.Snippet;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color: return mItemKind.Color;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File: return mItemKind.File;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text;\n        case mItemKind.Method: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method;\n        case mItemKind.Function: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function;\n        case mItemKind.Constructor: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor;\n        case mItemKind.Field: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field;\n        case mItemKind.Variable: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable;\n        case mItemKind.Class: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class;\n        case mItemKind.Interface: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface;\n        case mItemKind.Module: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module;\n        case mItemKind.Property: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\n        case mItemKind.Unit: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit;\n        case mItemKind.Value: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value;\n        case mItemKind.Enum: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum;\n        case mItemKind.Keyword: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword;\n        case mItemKind.Snippet: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet;\n        case mItemKind.Color: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color;\n        case mItemKind.File: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File;\n        case mItemKind.Reference: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference;\n    }\n    return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"g\" /* MarkupKind */].PlainText : __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"g\" /* MarkupKind */].Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* InsertTextFormat */].Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"l\" /* TextEdit */].replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* InsertTextFormat */].Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\n\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].File: return mKind.Array;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Module: return mKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Namespace: return mKind.Namespace;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Package: return mKind.Package;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Class: return mKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Method: return mKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Property: return mKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Field: return mKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Constructor: return mKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Enum: return mKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Interface: return mKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Function: return mKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Variable: return mKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Constant: return mKind.Constant;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].String: return mKind.String;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Number: return mKind.Number;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Boolean: return mKind.Boolean;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* SymbolKind */].Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Read: return mKind.Read;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Write: return mKind.Write;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DocumentHighlightKind */].Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\n\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\n\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\n\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\n\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/4.22063c72.chunk.js","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n// module id = 1025\n// module chunks = 4","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\n// module id = 1062\n// module chunks = 1 4","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/workerManager.js\n// module id = 1136\n// module chunks = 4","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js\n// module id = 1137\n// module chunks = 4"],"sourceRoot":""}