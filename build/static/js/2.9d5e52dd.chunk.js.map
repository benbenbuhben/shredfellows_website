{"version":3,"sources":["../static/js/2.9d5e52dd.chunk.js","../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js","../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js"],"names":["webpackJsonp","1028","module","__webpack_exports__","__webpack_require__","setupMode","defaults","disposables","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","push","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","Object","__WEBPACK_IMPORTED_MODULE_2__tokenization_js__","setLanguageConfiguration","richEditConfiguration","registerColorProvider","defineProperty","value","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","1063","d","Range","Location","DiagnosticSeverity","TextEdit","MarkupKind","CompletionItemKind","InsertTextFormat","CompletionItem","SymbolKind","TextDocument","Position","create","line","character","is","candidate","Is","defined","number","one","two","three","four","start","end","Error","uri","range","string","undefined","Warning","Information","Hint","Diagnostic","message","severity","code","source","result","Command","title","command","args","replace","newText","insert","position","del","TextDocumentEdit","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","TextDocumentIdentifier","TextEditChangeImpl","this","prototype","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","documentChanges","forEach","textDocumentEdit","textEditChange","changes","keys","key","get","enumerable","configurable","getTextEditChange","version","TextDocumentItem","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","label","CompletionList","items","isIncomplete","MarkedString","fromPlainText","plainText","ParameterInformation","documentation","SignatureInformation","parameters","DocumentHighlightKind","Read","Write","DocumentHighlight","kind","Namespace","Package","String","Number","Boolean","Key","Null","SymbolInformation","name","containerName","location","CodeActionContext","diagnostics","typedArray","CodeLens","data","FormattingOptions","tabSize","insertSpaces","boolean","DocumentLink","target","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","lastModifiedOffset","i","e","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","1064","createScanner","ignoreTrivia","scanHexDigits","count","exact","digits","charCodeAt","pos","setPosition","newPosition","tokenOffset","token","scanError","scanNumber","isDigit","scanString","len","isLineBreak","ch_1","fromCharCode","scanNext","isWhiteSpace","commentClosed","isUnknownContentCharacter","scanNextNonTrivia","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","1069","format","documentText","options","__WEBPACK_IMPORTED_MODULE_0__impl_format_js__","parse","__WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__","__WEBPACK_IMPORTED_MODULE_3__impl_parser_js__","1070","newLineAndIndent","eol","repeat","indentValue","initialIndentLevel","indentLevel","scanner","lineBreak","hasError","addEdit","rangeEnd","rangeStart","editOperations","formatText","formatTextStart","isEOL","computeIndentLevel","getEOL","__WEBPACK_IMPORTED_MODULE_0__scanner_js__","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","nChars","indexOf","1071","getLocation","setPreviousNode","type","previousNodeInst","columnOffset","previousNode","segments","earlyReturnException","isAtPropertyKey","visit","onObjectBegin","onObjectProperty","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","path","matches","pattern","k","errors","onValue","currentParent","currentProperty","previousParents","object","array","onError","error","parseTree","ensurePropertyComplete","parent","valueNode","children","findNodeAtLocation","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodeValue","map","obj","prop","visitor","toNoArgVisit","visitFunction","_scanner","toOneArgVisit","arg","handleError","disallowComments","onComment","skipUntilAfter","skipUntil","parseString","isValue","parseLiteral","JSON","parseProperty","parseValue","parseObject","needsComma","allowTrailingComma","parseArray","stripComments","replaceCh","parts","join","1081","setProperty","formattingOptions","getInsertionIndex","__WEBPACK_IMPORTED_MODULE_1__parser_js__","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","next","withFormatting","stringify","newProperty","removalIndex","toRemove","parentEndOffset","applyEdit","begin","__WEBPACK_IMPORTED_MODULE_0__format_js__","edit_1","1138","toShallowCancelPromise","completeCallback","errorCallback","r","Promise","c","then","WorkerManager","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","diagnosticsOptions","getProxy","resources","_","withSyncedResources","1139","toSeverity","lsSeverity","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","MarkerSeverity","Info","toDiagnostics","resource","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","toTextEdit","textEdit","isMarkupContent","thing","toMarkdownString","entry","language","toMarkedStringArray","contents","toLocation","Uri","toSymbolKind","mKind","fromFormattingOptions","wireCancellationToken","promise","cancel","onCancellationRequested","DiagnosticsAdapter","CompletionAdapter","HoverAdapter","DocumentSymbolAdapter","DocumentFormattingEditProvider","DocumentRangeFormattingEditProvider","DocumentColorAdapter","_disposables","_listener","onModelAdd","model","modeId","getModeId","handle","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","resetSchema","doValidation","markers","getModel","err","console","provideCompletionItems","getWordUntilPosition","doComplete","info","item","insertText","sortText","filterText","detail","insertTextFormat","provideHover","doHover","provideDocumentSymbols","findDocumentSymbols","provideDocumentFormattingEdits","provideDocumentRangeFormattingEdits","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","additionalTextEdits","1140","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","numberOfInsertedCharacters","adjustOffset","__WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__","lastWasColon","tokens","endState","clone","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData"],"mappings":"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","file":"static/js/2.9d5e52dd.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1028:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setupMode\"] = setupMode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__workerManager_js__ = __webpack_require__(1138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__ = __webpack_require__(1139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tokenization_js__ = __webpack_require__(1140);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nfunction setupMode(defaults) {\n    var disposables = [];\n    var client = new __WEBPACK_IMPORTED_MODULE_0__workerManager_js__[\"a\" /* WorkerManager */](defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"a\" /* CompletionAdapter */](worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"g\" /* HoverAdapter */](worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"f\" /* DocumentSymbolAdapter */](worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"d\" /* DocumentFormattingEditProvider */](worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"e\" /* DocumentRangeFormattingEditProvider */](worker)));\n    disposables.push(new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"b\" /* DiagnosticsAdapter */](languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, Object(__WEBPACK_IMPORTED_MODULE_2__tokenization_js__[\"a\" /* createTokenizationSupport */])(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"c\" /* DocumentColorAdapter */](worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Position */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Location; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DiagnosticSeverity; });\n/* unused harmony export Diagnostic */\n/* unused harmony export Command */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return TextEdit; });\n/* unused harmony export TextDocumentEdit */\n/* unused harmony export WorkspaceChange */\n/* unused harmony export TextDocumentIdentifier */\n/* unused harmony export VersionedTextDocumentIdentifier */\n/* unused harmony export TextDocumentItem */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return InsertTextFormat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionItem; });\n/* unused harmony export CompletionList */\n/* unused harmony export MarkedString */\n/* unused harmony export ParameterInformation */\n/* unused harmony export SignatureInformation */\n/* unused harmony export DocumentHighlightKind */\n/* unused harmony export DocumentHighlight */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return SymbolKind; });\n/* unused harmony export SymbolInformation */\n/* unused harmony export CodeActionContext */\n/* unused harmony export CodeLens */\n/* unused harmony export FormattingOptions */\n/* unused harmony export DocumentLink */\n/* unused harmony export EOL */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return TextDocument; });\n/* unused harmony export TextDocumentSaveReason */\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nvar Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nvar Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nvar Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nvar DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nvar Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nvar Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nvar TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nvar TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\n\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nvar TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nvar VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nvar TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nvar MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nvar InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nvar CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nvar CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nvar ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nvar SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nvar DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nvar CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nvar CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nvar FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\n\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar EOL = ['\\n', '\\r\\n', '\\r'];\nvar TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n/***/ }),\n\n/***/ 1064:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createScanner;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nfunction createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map\n\n/***/ }),\n\n/***/ 1069:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createScanner; });\n/* unused harmony export getLocation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return parse; });\n/* unused harmony export parseTree */\n/* unused harmony export findNodeAtLocation */\n/* unused harmony export getNodeValue */\n/* unused harmony export visit */\n/* unused harmony export stripComments */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = format;\n/* unused harmony export modify */\n/* unused harmony export applyEdits */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__impl_format_js__ = __webpack_require__(1070);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__impl_edit_js__ = __webpack_require__(1081);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__ = __webpack_require__(1064);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__ = __webpack_require__(1071);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nvar createScanner = __WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__[\"a\" /* createScanner */];\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nvar getLocation = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"b\" /* getLocation */];\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nvar parse = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"d\" /* parse */];\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nvar parseTree = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"e\" /* parseTree */];\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nvar findNodeAtLocation = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"a\" /* findNodeAtLocation */];\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nvar getNodeValue = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"c\" /* getNodeValue */];\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nvar visit = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"g\" /* visit */];\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nvar stripComments = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"f\" /* stripComments */];\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nfunction format(documentText, range, options) {\n    return __WEBPACK_IMPORTED_MODULE_0__impl_format_js__[\"a\" /* format */](documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nfunction modify(text, path, value, options) {\n    return __WEBPACK_IMPORTED_MODULE_1__impl_edit_js__[\"b\" /* setProperty */](text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nfunction applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = __WEBPACK_IMPORTED_MODULE_1__impl_edit_js__[\"a\" /* applyEdit */](text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n\n/***/ 1070:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = format;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isEOL;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scanner_js__ = __webpack_require__(1064);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nfunction format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = Object(__WEBPACK_IMPORTED_MODULE_0__scanner_js__[\"a\" /* createScanner */])(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nfunction isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getLocation;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = parse;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = parseTree;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = findNodeAtLocation;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getNodeValue;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = visit;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = stripComments;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scanner_js__ = __webpack_require__(1064);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nfunction getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nfunction parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nfunction parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nfunction findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nfunction getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nfunction visit(text, visitor, options) {\n    var _scanner = Object(__WEBPACK_IMPORTED_MODULE_0__scanner_js__[\"a\" /* createScanner */])(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nfunction stripComments(text, replaceCh) {\n    var _scanner = Object(__WEBPACK_IMPORTED_MODULE_0__scanner_js__[\"a\" /* createScanner */])(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map\n\n/***/ }),\n\n/***/ 1081:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export removeProperty */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = setProperty;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = applyEdit;\n/* unused harmony export isWS */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__format_js__ = __webpack_require__(1070);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_js__ = __webpack_require__(1071);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nfunction removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nfunction setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = Object(__WEBPACK_IMPORTED_MODULE_1__parser_js__[\"e\" /* parseTree */])(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = Object(__WEBPACK_IMPORTED_MODULE_1__parser_js__[\"a\" /* findNodeAtLocation */])(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = Object(__WEBPACK_IMPORTED_MODULE_1__parser_js__[\"a\" /* findNodeAtLocation */])(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) {\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !Object(__WEBPACK_IMPORTED_MODULE_0__format_js__[\"b\" /* isEOL */])(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !Object(__WEBPACK_IMPORTED_MODULE_0__format_js__[\"b\" /* isEOL */])(newText, end)) {\n            end++;\n        }\n    }\n    var edits = Object(__WEBPACK_IMPORTED_MODULE_0__format_js__[\"a\" /* format */])(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nfunction applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nfunction isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WorkerManager; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\n\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return HoverAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return DocumentSymbolAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DocumentFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return DocumentRangeFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentColorAdapter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__ = __webpack_require__(1063);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\n\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DiagnosticSeverity */].Error: return monaco.MarkerSeverity.Error;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DiagnosticSeverity */].Warning: return monaco.MarkerSeverity.Warning;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DiagnosticSeverity */].Information: return monaco.MarkerSeverity.Info;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* DiagnosticSeverity */].Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Text: return mItemKind.Text;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Method: return mItemKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Function: return mItemKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Constructor: return mItemKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Field: return mItemKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Variable: return mItemKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Class: return mItemKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Interface: return mItemKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Module: return mItemKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Property: return mItemKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Unit: return mItemKind.Unit;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Value: return mItemKind.Value;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Enum: return mItemKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Keyword: return mItemKind.Keyword;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Snippet: return mItemKind.Snippet;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Color: return mItemKind.Color;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].File: return mItemKind.File;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Text;\n        case mItemKind.Method: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Method;\n        case mItemKind.Function: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Function;\n        case mItemKind.Constructor: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Constructor;\n        case mItemKind.Field: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Field;\n        case mItemKind.Variable: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Variable;\n        case mItemKind.Class: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Class;\n        case mItemKind.Interface: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Interface;\n        case mItemKind.Module: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Module;\n        case mItemKind.Property: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Property;\n        case mItemKind.Unit: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Unit;\n        case mItemKind.Value: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Value;\n        case mItemKind.Enum: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Enum;\n        case mItemKind.Keyword: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Keyword;\n        case mItemKind.Snippet: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Snippet;\n        case mItemKind.Color: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Color;\n        case mItemKind.File: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].File;\n        case mItemKind.Reference: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Reference;\n    }\n    return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* CompletionItemKind */].Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* MarkupKind */].PlainText : __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* MarkupKind */].Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* InsertTextFormat */].Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"j\" /* TextEdit */].replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* InsertTextFormat */].Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\n\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\n\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].File: return mKind.Array;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Module: return mKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Namespace: return mKind.Namespace;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Package: return mKind.Package;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Class: return mKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Method: return mKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Property: return mKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Field: return mKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Constructor: return mKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Enum: return mKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Interface: return mKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Function: return mKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Variable: return mKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Constant: return mKind.Constant;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].String: return mKind.String;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Number: return mKind.Number;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Boolean: return mKind.Boolean;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"h\" /* SymbolKind */].Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\n\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\n\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\n\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\n\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createTokenizationSupport;\n/* unused harmony export TOKEN_DELIM_OBJECT */\n/* unused harmony export TOKEN_DELIM_ARRAY */\n/* unused harmony export TOKEN_DELIM_COLON */\n/* unused harmony export TOKEN_DELIM_COMMA */\n/* unused harmony export TOKEN_VALUE_BOOLEAN */\n/* unused harmony export TOKEN_VALUE_NULL */\n/* unused harmony export TOKEN_VALUE_STRING */\n/* unused harmony export TOKEN_VALUE_NUMBER */\n/* unused harmony export TOKEN_PROPERTY_NAME */\n/* unused harmony export TOKEN_COMMENT_BLOCK */\n/* unused harmony export TOKEN_COMMENT_LINE */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__ = __webpack_require__(1069);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nfunction createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nvar TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nvar TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nvar TOKEN_DELIM_COLON = 'delimiter.colon.json';\nvar TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nvar TOKEN_VALUE_BOOLEAN = 'keyword.json';\nvar TOKEN_VALUE_NULL = 'keyword.json';\nvar TOKEN_VALUE_STRING = 'string.value.json';\nvar TOKEN_VALUE_NUMBER = 'number.json';\nvar TOKEN_PROPERTY_NAME = 'string.key.json';\nvar TOKEN_COMMENT_BLOCK = 'comment.block.json';\nvar TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = __WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__[\"a\" /* createScanner */](line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.9d5e52dd.chunk.js","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js\n// module id = 1028\n// module chunks = 2","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\n// module id = 1063\n// module chunks = 1 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js\n// module id = 1064\n// module chunks = 1 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\n// module id = 1069\n// module chunks = 1 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js\n// module id = 1070\n// module chunks = 1 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js\n// module id = 1071\n// module chunks = 1 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) {\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js\n// module id = 1081\n// module chunks = 1 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/workerManager.js\n// module id = 1138\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js\n// module id = 1139\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/tokenization.js\n// module id = 1140\n// module chunks = 2"],"sourceRoot":""}